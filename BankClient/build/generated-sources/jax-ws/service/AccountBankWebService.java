
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AccountBankWebService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AccountBankWebService {


    /**
     * 
     * @param password
     * @param accID
     * @return
     *     returns service.LoginRes
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service/", className = "service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service/", className = "service.LoginResponse")
    @Action(input = "http://service/AccountBankWebService/loginRequest", output = "http://service/AccountBankWebService/loginResponse")
    public LoginRes login(
        @WebParam(name = "accID", targetNamespace = "")
        String accID,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param transName
     * @param accIDReceive
     * @param postage
     * @param transMoney
     * @param accID
     * @return
     *     returns service.LoginRes
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addTrans", targetNamespace = "http://service/", className = "service.AddTrans")
    @ResponseWrapper(localName = "addTransResponse", targetNamespace = "http://service/", className = "service.AddTransResponse")
    @Action(input = "http://service/AccountBankWebService/addTransRequest", output = "http://service/AccountBankWebService/addTransResponse")
    public LoginRes addTrans(
        @WebParam(name = "accID", targetNamespace = "")
        String accID,
        @WebParam(name = "accIDReceive", targetNamespace = "")
        String accIDReceive,
        @WebParam(name = "transName", targetNamespace = "")
        String transName,
        @WebParam(name = "transMoney", targetNamespace = "")
        float transMoney,
        @WebParam(name = "postage", targetNamespace = "")
        String postage);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Float
     */
    @WebMethod(operationName = "Postage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Postage", targetNamespace = "http://service/", className = "service.Postage")
    @ResponseWrapper(localName = "PostageResponse", targetNamespace = "http://service/", className = "service.PostageResponse")
    @Action(input = "http://service/AccountBankWebService/PostageRequest", output = "http://service/AccountBankWebService/PostageResponse")
    public Float postage(
        @WebParam(name = "arg0", targetNamespace = "")
        Float arg0);

    /**
     * 
     * @param beginDate
     * @param endDate
     * @param accID
     * @return
     *     returns java.util.List<service.Transactiondetails>
     * @throws ParseException_Exception
     */
    @WebMethod(operationName = "HisTrans")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "HisTrans", targetNamespace = "http://service/", className = "service.HisTrans")
    @ResponseWrapper(localName = "HisTransResponse", targetNamespace = "http://service/", className = "service.HisTransResponse")
    @Action(input = "http://service/AccountBankWebService/HisTransRequest", output = "http://service/AccountBankWebService/HisTransResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://service/AccountBankWebService/HisTrans/Fault/ParseException")
    })
    public List<Transactiondetails> hisTrans(
        @WebParam(name = "accID", targetNamespace = "")
        String accID,
        @WebParam(name = "beginDate", targetNamespace = "")
        String beginDate,
        @WebParam(name = "endDate", targetNamespace = "")
        String endDate)
        throws ParseException_Exception
    ;

}
